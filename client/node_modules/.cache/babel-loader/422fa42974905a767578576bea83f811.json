{"ast":null,"code":"var _jsxFileName = \"/Users/oferraanan/Downloads/shopping/client/src/admin/components/FilterAdd.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // MUI\n\nimport { Box, Grid, TextField, Button, Alert } from '@mui/material'; // COMPONENTS\n\nimport Input from './Input';\nimport SelectorAutocomplete from './SelectorAutocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FilterAdd = props => {\n  _s();\n\n  const {\n    filters,\n    onCreateFilter,\n    alert\n  } = props;\n  useEffect(() => {\n    setShowAlert(alert);\n  }, [alert]); // STATE\n\n  const [inputs, setInputs] = useState(['', '', false]); // TEXT FIELDS HANDLERS\n\n  const onInputChange = event => {\n    onSelect(+event.target.id, event.target.value);\n  }; // SELECT HANDLER\n\n\n  const [variants, setVariants] = useState([]);\n\n  const onSelect = (id, value) => {\n    let state = inputs;\n    state[+id] = value ? value : ''; // on type set\n\n    if (+id === 0) {\n      // reset variant\n      state[1] = ''; // set variant options\n\n      setVariants(filters.filterList.filter(item => item.type === state[0]).map(item => item.variant));\n    } // validation\n\n\n    state[2] = state[0] !== '' && state[1] !== ''; // update state\n\n    setInputs(state);\n    setShowAlert(null);\n  }; // ALERT HANDLER\n\n\n  const [showAlert, setShowAlert] = useState(null);\n\n  const onSubmitClicked = () => {\n    if (inputs[2] && onCreateFilter) {\n      onCreateFilter && onCreateFilter({\n        type: inputs[0],\n        variant: inputs[1]\n      });\n    } else {\n      setShowAlert({\n        type: 'error',\n        message: 'Missing required fields'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1\n    },\n    display: 'flex',\n    justifyContent: 'center',\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      sx: {\n        width: 1 / 3\n      },\n      spacing: 2,\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sx: {\n          width: 1\n        },\n        children: \"Create new filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sx: {\n          width: 1\n        },\n        children: filters && filters.filterTypes.length > 0 ? /*#__PURE__*/_jsxDEV(SelectorAutocomplete, {\n          id: '0',\n          label: \"Filter type\",\n          options: filters.filterTypes,\n          onSelect: onSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Input, {\n          inputType: 'text',\n          id: '0',\n          label: \"Filter type\",\n          onChange: onInputChange,\n          required: true,\n          camelCased: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sx: {\n          width: 1\n        },\n        children: filters && filters.filterTypes.length > 0 ? /*#__PURE__*/_jsxDEV(SelectorAutocomplete, {\n          sx: {\n            width: 1\n          },\n          options: variants,\n          id: '1',\n          label: \"Filter variant\",\n          onSelect: onSelect,\n          disabled: inputs[0] === ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Input, {\n          inputType: 'text',\n          id: '1',\n          label: \"Filter variant\",\n          onChange: onInputChange,\n          required: true,\n          camelCased: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sx: {\n          width: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            width: 1\n          },\n          variant: \"contained\",\n          color: \"success\",\n          onClick: onSubmitClicked,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), showAlert && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sx: {\n          width: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: showAlert.type,\n          color: showAlert.type,\n          children: showAlert.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FilterAdd, \"Glkr9Ao6E/5FQkXzKyTlq5ai81o=\");\n\n_c = FilterAdd;\nexport default FilterAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterAdd\");","map":{"version":3,"sources":["/Users/oferraanan/Downloads/shopping/client/src/admin/components/FilterAdd.js"],"names":["React","useState","useEffect","Box","Grid","TextField","Button","Alert","Input","SelectorAutocomplete","FilterAdd","props","filters","onCreateFilter","alert","setShowAlert","inputs","setInputs","onInputChange","event","onSelect","target","id","value","variants","setVariants","state","filterList","filter","item","type","map","variant","showAlert","onSubmitClicked","message","flexGrow","width","filterTypes","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// MUI\nimport { Box, Grid, TextField, Button, Alert } from '@mui/material';\n\n// COMPONENTS\nimport Input from './Input';\nimport SelectorAutocomplete from './SelectorAutocomplete';\n\nconst FilterAdd = (props) => {\n  const { filters, onCreateFilter, alert } = props;\n\n  useEffect(() => {\n    setShowAlert(alert);\n  }, [alert]);\n\n  // STATE\n  const [inputs, setInputs] = useState(['', '', false]);\n\n  // TEXT FIELDS HANDLERS\n  const onInputChange = (event) => {\n    onSelect(+event.target.id, event.target.value);\n  };\n\n  // SELECT HANDLER\n  const [variants, setVariants] = useState([]);\n  const onSelect = (id, value) => {\n    let state = inputs;\n    state[+id] = value ? value : '';\n\n    // on type set\n    if (+id === 0) {\n      // reset variant\n      state[1] = '';\n      // set variant options\n      setVariants(\n        filters.filterList\n          .filter((item) => item.type === state[0])\n          .map((item) => item.variant)\n      );\n    }\n\n    // validation\n    state[2] = state[0] !== '' && state[1] !== '';\n\n    // update state\n    setInputs(state);\n    setShowAlert(null);\n  };\n\n  // ALERT HANDLER\n  const [showAlert, setShowAlert] = useState(null);\n  const onSubmitClicked = () => {\n    if (inputs[2] && onCreateFilter) {\n      onCreateFilter && onCreateFilter({ type: inputs[0], variant: inputs[1] });\n    } else {\n      setShowAlert({ type: 'error', message: 'Missing required fields' });\n    }\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }} display={'flex'} justifyContent={'center'}>\n      <Grid\n        container\n        sx={{ width: 1 / 3 }}\n        spacing={2}\n        flexDirection={'column'}\n        justifyContent={'flex-start'}\n        alignItems={'center'}\n      >\n        <Grid item sx={{ width: 1 }}>\n          Create new filter\n        </Grid>\n        <Grid item sx={{ width: 1 }}>\n          {filters && filters.filterTypes.length > 0 ? (\n            <SelectorAutocomplete\n              id={'0'}\n              label=\"Filter type\"\n              options={filters.filterTypes}\n              onSelect={onSelect}\n            />\n          ) : (\n            <Input\n              inputType={'text'}\n              id={'0'}\n              label=\"Filter type\"\n              onChange={onInputChange}\n              required\n              camelCased\n            />\n          )}\n        </Grid>\n        <Grid item sx={{ width: 1 }}>\n          {filters && filters.filterTypes.length > 0 ? (\n            <SelectorAutocomplete\n              sx={{ width: 1 }}\n              options={variants}\n              id={'1'}\n              label=\"Filter variant\"\n              onSelect={onSelect}\n              disabled={inputs[0] === ''}\n            />\n          ) : (\n            <Input\n              inputType={'text'}\n              id={'1'}\n              label=\"Filter variant\"\n              onChange={onInputChange}\n              required\n              camelCased\n            />\n          )}\n        </Grid>\n        <Grid item sx={{ width: 1 }}>\n          <Button\n            sx={{ width: 1 }}\n            variant=\"contained\"\n            color=\"success\"\n            onClick={onSubmitClicked}\n          >\n            Submit\n          </Button>\n        </Grid>\n        {showAlert && (\n          <Grid item sx={{ width: 1 }}>\n            <Alert severity={showAlert.type} color={showAlert.type}>\n              {showAlert.message}\n            </Alert>\n          </Grid>\n        )}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default FilterAdd;\n"]},"metadata":{},"sourceType":"module"}