{"ast":null,"code":"var _jsxFileName = \"/Users/oferraanan/Downloads/shopping/client/src/admin/components/ProductTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // MUI\n\nimport Box from '@mui/material/Box';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton from '@mui/material/IconButton';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TablePagination from '@mui/material/TablePagination';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport { Delete, DisabledByDefault, Edit } from '@mui/icons-material';\nimport { Tooltip } from '@mui/material'; // CammelCase Helper\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst camelCase = str => {\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n};\n\nconst Row = props => {\n  _s();\n\n  const {\n    product,\n    onAction\n  } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const onActionClicked = (type, product) => {\n    onAction && onAction({\n      type,\n      product\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableRow, {\n      sx: {\n        '& > *': {\n          borderBottom: 'unset'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"expand row\",\n          size: \"small\",\n          onClick: () => setOpen(!open),\n          children: open ? /*#__PURE__*/_jsxDEV(KeyboardArrowUpIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"center\",\n        children: product.productName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"center\",\n        children: product.productCost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"center\",\n        children: product.productStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"center\",\n        children: product.productModified\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Delete\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"error\",\n            onClick: () => {\n              onActionClicked('delete', product);\n            },\n            children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Edit\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"primary\",\n            onClick: () => {\n              onActionClicked('edit', product);\n            },\n            children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: product.productStatus.toString().toLowerCase() === 'active' ? 'Inactive' : 'Active',\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"warning\",\n            onClick: () => {\n              onActionClicked('status', product);\n            },\n            children: /*#__PURE__*/_jsxDEV(DisabledByDefault, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        style: {\n          paddingBottom: 0,\n          paddingTop: 0\n        },\n        colSpan: 6,\n        children: /*#__PURE__*/_jsxDEV(Collapse, {\n          in: open,\n          timeout: \"auto\",\n          unmountOnExit: true,\n          sx: {\n            backgroundColor: '#efffff',\n            borderRadius: 5,\n            border: '1px solid #aaa',\n            margin: 1,\n            padding: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              margin: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h7\",\n              gutterBottom: true,\n              component: \"div\",\n              children: [\"Product Description\", /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                component: \"div\",\n                sx: {\n                  color: '#999',\n                  fontSize: 14\n                },\n                children: product.productDesc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h7\",\n              gutterBottom: true,\n              component: \"div\",\n              mt: 3,\n              children: \"Product Filters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              size: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  sx: {\n                    backgroundColor: '#333'\n                  },\n                  children: product['filters'].map((filter, index) =>\n                  /*#__PURE__*/\n                  // filter title (type)\n                  _jsxDEV(TableCell, {\n                    sx: {\n                      color: 'white'\n                    },\n                    children: camelCase(filter[0])\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  sx: {\n                    backgroundColor: '#eee'\n                  },\n                  children: product['filters'].map((filter, index) =>\n                  /*#__PURE__*/\n                  // filter variant\n                  _jsxDEV(TableCell, {\n                    children: camelCase(filter[1])\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h7\",\n              gutterBottom: true,\n              component: \"div\",\n              mt: 3,\n              children: [\"Product Inventory\", /*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                component: \"div\",\n                sx: {\n                  color: '#999',\n                  fontSize: 14\n                },\n                children:\n                /*TODO row with crud*/\n                product.productInventory\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Row, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = Row;\n\nconst ProductTable = props => {\n  _s2();\n\n  const {\n    data,\n    onProductAction\n  } = props; // DATA FORMATING\n\n  const [products, setProduts] = useState([]);\n  useEffect(() => {\n    /**\n     * This process takes the data\n     * which is rows of 'Product', contains all the info,\n     * and creates a new Data 'Rows'\n     * seperates the info into 2 layers:\n     * 1) Row data (id, name, etc)\n     * 2) Array of all the filters [category, size, +++]\n     *\n     * this is needed because filters are modular\n     * and the Product 'Row' may contain different amount of filters\n     */\n    //\n    let rows = [];\n    data.forEach(product => {\n      let info = {};\n      let filters = [];\n\n      for (const [key, value] of Object.entries(product)) {\n        switch (key) {\n          // ▼ this is the Info layers\n          case 'productFilters':\n            for (const [, filter] of Object.entries(value)) {\n              filters.push([filter['filterType'], filter['filterVariant']]);\n            }\n\n            break;\n\n          default:\n            // ▼ this is the Filter layers\n            info[key] = value;\n            break;\n        }\n      } // add the filters array as the last item in the info row\n\n\n      info['filters'] = filters.sort((a, b) => a > b ? 1 : -1); // add this info row to 'Rows'\n\n      rows.push(info);\n    });\n    setProduts(rows);\n  }, [data]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  }; // ROW CALLBACK\n\n\n  const onAction = props => {\n    onProductAction && onProductAction(props);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      width: '100%',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"collapsible table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              backgroundColor: '#333'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                color: 'white'\n              },\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                color: 'white'\n              },\n              children: \"Cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                color: 'white'\n              },\n              children: \"Statue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                color: 'white'\n              },\n              children: \"Modified\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              sx: {\n                color: 'white'\n              },\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(product => {\n            return /*#__PURE__*/_jsxDEV(Row, {\n              product: product,\n              onAction: onAction\n            }, product.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: data.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ProductTable, \"Vqqy9vlmWYKIMRf0MUZIJUebANI=\");\n\n_c2 = ProductTable;\nexport default ProductTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"ProductTable\");","map":{"version":3,"sources":["/Users/oferraanan/Downloads/shopping/client/src/admin/components/ProductTable.js"],"names":["React","useState","useEffect","Box","Collapse","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TablePagination","Typography","Paper","KeyboardArrowDownIcon","KeyboardArrowUpIcon","Delete","DisabledByDefault","Edit","Tooltip","camelCase","str","charAt","toUpperCase","slice","toLowerCase","Row","props","product","onAction","open","setOpen","onActionClicked","type","borderBottom","productName","productCost","productStatus","productModified","toString","paddingBottom","paddingTop","backgroundColor","borderRadius","border","margin","padding","color","fontSize","productDesc","map","filter","index","productInventory","ProductTable","data","onProductAction","products","setProduts","rows","forEach","info","filters","key","value","Object","entries","push","sort","a","b","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","width","overflow","id","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// MUI\nimport Box from '@mui/material/Box';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton from '@mui/material/IconButton';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TablePagination from '@mui/material/TablePagination';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\n\nimport { Delete, DisabledByDefault, Edit } from '@mui/icons-material';\nimport { Tooltip } from '@mui/material';\n\n// CammelCase Helper\nconst camelCase = (str) => {\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n};\n\nconst Row = (props) => {\n  const { product, onAction } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const onActionClicked = (type, product) => {\n    onAction && onAction({ type, product });\n  };\n\n  return (\n    <React.Fragment>\n      <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell align=\"center\">{product.productName}</TableCell>\n        <TableCell align=\"center\">{product.productCost}</TableCell>\n        <TableCell align=\"center\">{product.productStatus}</TableCell>\n        <TableCell align=\"center\">{product.productModified}</TableCell>\n        <TableCell align=\"center\">\n          <Tooltip title=\"Delete\">\n            <IconButton\n              color=\"error\"\n              onClick={() => {\n                onActionClicked('delete', product);\n              }}\n            >\n              <Delete />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Edit\">\n            <IconButton\n              color=\"primary\"\n              onClick={() => {\n                onActionClicked('edit', product);\n              }}\n            >\n              <Edit />\n            </IconButton>\n          </Tooltip>\n          <Tooltip\n            title={\n              product.productStatus.toString().toLowerCase() === 'active'\n                ? 'Inactive'\n                : 'Active'\n            }\n          >\n            <IconButton\n              color=\"warning\"\n              onClick={() => {\n                onActionClicked('status', product);\n              }}\n            >\n              <DisabledByDefault />\n            </IconButton>\n          </Tooltip>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse\n            in={open}\n            timeout=\"auto\"\n            unmountOnExit\n            sx={{\n              backgroundColor: '#efffff',\n              borderRadius: 5,\n              border: '1px solid #aaa',\n              margin: 1,\n              padding: 1,\n            }}\n          >\n            <Box sx={{ margin: 1 }}>\n              <Typography variant=\"h7\" gutterBottom component=\"div\">\n                Product Description\n                <Typography\n                  gutterBottom\n                  component=\"div\"\n                  sx={{ color: '#999', fontSize: 14 }}\n                >\n                  {product.productDesc}\n                </Typography>\n              </Typography>\n              <Typography variant=\"h7\" gutterBottom component=\"div\" mt={3}>\n                Product Filters\n              </Typography>\n              <Table size=\"small\">\n                <TableHead>\n                  <TableRow sx={{ backgroundColor: '#333' }}>\n                    {product['filters'].map((filter, index) => (\n                      // filter title (type)\n                      <TableCell key={index} sx={{ color: 'white' }}>\n                        {camelCase(filter[0])}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow sx={{ backgroundColor: '#eee' }}>\n                    {product['filters'].map((filter, index) => (\n                      // filter variant\n                      <TableCell key={index}>{camelCase(filter[1])}</TableCell>\n                    ))}\n                  </TableRow>\n                </TableBody>\n              </Table>\n              <Typography variant=\"h7\" gutterBottom component=\"div\" mt={3}>\n                Product Inventory\n                <Typography\n                  gutterBottom\n                  component=\"div\"\n                  sx={{ color: '#999', fontSize: 14 }}\n                >\n                  {/*TODO row with crud*/ product.productInventory}\n                </Typography>\n              </Typography>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n};\n\nconst ProductTable = (props) => {\n  const { data, onProductAction } = props;\n  // DATA FORMATING\n  const [products, setProduts] = useState([]);\n  useEffect(() => {\n    /**\n     * This process takes the data\n     * which is rows of 'Product', contains all the info,\n     * and creates a new Data 'Rows'\n     * seperates the info into 2 layers:\n     * 1) Row data (id, name, etc)\n     * 2) Array of all the filters [category, size, +++]\n     *\n     * this is needed because filters are modular\n     * and the Product 'Row' may contain different amount of filters\n     */\n    //\n\n    let rows = [];\n\n    data.forEach((product) => {\n      let info = {};\n      let filters = [];\n      for (const [key, value] of Object.entries(product)) {\n        switch (key) {\n          // ▼ this is the Info layers\n          case 'productFilters':\n            for (const [, filter] of Object.entries(value)) {\n              filters.push([filter['filterType'], filter['filterVariant']]);\n            }\n            break;\n\n          default:\n            // ▼ this is the Filter layers\n            info[key] = value;\n            break;\n        }\n      }\n\n      // add the filters array as the last item in the info row\n      info['filters'] = filters.sort((a, b) => (a > b ? 1 : -1));\n\n      // add this info row to 'Rows'\n      rows.push(info);\n    });\n\n    setProduts(rows);\n  }, [data]);\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  // ROW CALLBACK\n  const onAction = (props) => {\n    onProductAction && onProductAction(props);\n  };\n\n  return (\n    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"collapsible table\">\n          <TableHead>\n            <TableRow sx={{ backgroundColor: '#333' }}>\n              <TableCell />\n              <TableCell align=\"center\" sx={{ color: 'white' }}>\n                Name\n              </TableCell>\n              <TableCell align=\"center\" sx={{ color: 'white' }}>\n                Cost\n              </TableCell>\n              <TableCell align=\"center\" sx={{ color: 'white' }}>\n                Statue\n              </TableCell>\n              <TableCell align=\"center\" sx={{ color: 'white' }}>\n                Modified\n              </TableCell>\n              <TableCell align=\"center\" sx={{ color: 'white' }}>\n                Actions\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {products\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((product) => {\n                return (\n                  <Row key={product.id} product={product} onAction={onAction} />\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={data.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n};\n\nexport default ProductTable;\n"]},"metadata":{},"sourceType":"module"}