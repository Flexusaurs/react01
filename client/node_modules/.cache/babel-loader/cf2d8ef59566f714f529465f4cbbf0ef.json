{"ast":null,"code":"var _jsxFileName = \"/Users/oferraanan/Downloads/shopping/client/src/admin/components/ProductAdd.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useCallback } from 'react'; // MUI\n\nimport { Box, Grid, Button, Alert } from '@mui/material'; // COMPONENTS\n\nimport Input from './Input';\nimport Selector from './Selector'; // CammelCase Helper\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst camelCase = str => {\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n}; //REDUCER\n\n\nconst FORM_UPDATE = 'FORM_UPDATE';\n\nconst formReducer = (state, action) => {\n  if (action.type === FORM_UPDATE) {\n    let formState = state;\n    let id = action.id;\n    let value = action.value;\n\n    if (id.toString().includes('filter')) {\n      // the filter Type\n      let type = id.toString().replace('filter', ''); // remove existing filter of the same Type\n\n      let filters = formState['productFilters'].filter(item => item.filterType !== type); // add this new filter to the Filters Array\n\n      filters.push({\n        filterType: type,\n        filterVariant: value\n      }); // set to the formState\n\n      formState['productFilters'] = filters;\n      console.log(filters);\n    } else {\n      formState[id] = value;\n    }\n\n    switch (id) {\n      case 'productCost':\n      case 'productInventory':\n        if (!value || value === '') {\n          formState[id] = id === 'productInventory' ? 1 : 0;\n        }\n\n        break;\n\n      default:\n        break;\n    } // CHECK IF THE FROM IS VALID\n\n\n    let formIsValid = Object.keys(formState).reduce((prev, key) => {\n      let res;\n\n      if (key === 'productCost' || key === 'productInventory') {\n        res = formState[key] > 0;\n      } else {\n        res = formState[key] !== '';\n      }\n\n      return res && prev;\n    }, true);\n    return { ...formState,\n      formIsValid: formIsValid\n    };\n  }\n\n  return state;\n}; // COMPONENT\n\n\nconst ProductAdd = props => {\n  _s();\n\n  const {\n    filters,\n    onCreateProduct,\n    onEditProduct,\n    editedProduct,\n    alert\n  } = props; //REDUCER ACTION / UPDATE\n\n  const [formState, dispatchFormState] = useReducer(formReducer, {\n    productName: editedProduct.productName || '',\n    productDesc: '',\n    productCost: 0,\n    productInventory: 1,\n    productStatus: 'active',\n    productFilters: [],\n    formIsValid: false\n  }); // ALERT HANDLER\n\n  const [showAlert, setShowAlert] = useState(null);\n  useEffect(() => {\n    setShowAlert(alert);\n  }, [alert]); //UPADTE INPUTS\n\n  const onInputUpdate = useCallback((id, value) => {\n    dispatchFormState({\n      type: FORM_UPDATE,\n      id,\n      value\n    });\n    setShowAlert(null);\n  }, [dispatchFormState, setShowAlert]); //INPUTS CALLBACK\n\n  const onInputChange = event => {\n    let id = event.target.id;\n    let value = event.target.value;\n    id && onInputUpdate(id, value);\n  }; // SUBMIT HANDLER\n\n\n  const onSubmitClicked = () => {\n    // if -> just in case...\n    // it is validated in the renderer scope\n    if (formState.formIsValid && onCreateProduct) {\n      let product = formState;\n      delete product.formIsValid; // parent callback\n\n      onCreateProduct && onCreateProduct(product);\n      onEditProduct && onEditProduct(product);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      padding: '50px 0'\n    },\n    display: 'flex',\n    justifyContent: 'center',\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      sx: {\n        width: 1 / 2\n      },\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sx: {\n          width: 1\n        },\n        children: \"Create new Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        sx: {\n          width: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sx: {\n            width: 1\n          },\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            inputType: 'text',\n            id: 'productName',\n            label: \"Product Name\",\n            onChange: onInputChange,\n            required: true,\n            camelCased: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sx: {\n            width: 1\n          },\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            inputType: 'text',\n            id: 'productDesc',\n            label: \"Product Description\",\n            onChange: onInputChange,\n            required: true,\n            camelCased: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sx: {\n            width: 1\n          },\n          children: \"Product Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), filters.filterTypes.map((type, index) => {\n          const variants = filters.filterList.filter(item => item.type === type).map(item => item.variant);\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            sx: {\n              width: 1\n            },\n            padding: 2,\n            children: /*#__PURE__*/_jsxDEV(Selector, {\n              id: `filter${camelCase(type)}`,\n              selectors: variants,\n              label: `${camelCase(type)}`,\n              onSelect: onInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sx: {\n            width: 1,\n            color: 'primary'\n          },\n          children: \"Product Inventory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sx: {\n            width: 1\n          },\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            inputType: 'currency',\n            id: 'productCost',\n            label: \"Product Cost\",\n            onChange: onInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sx: {\n            width: 1\n          },\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            inputType: 'number',\n            id: 'productInventory',\n            label: \"Product Inventory\",\n            defaultValue: '1',\n            onChange: onInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sx: {\n            width: 1\n          },\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(Selector, {\n            id: 'productStatus',\n            selectors: ['Inactive', 'Active'],\n            defaultIndex: 1,\n            label: 'Product Status',\n            onSelect: onInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sx: {\n            width: 1\n          },\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              width: 1\n            },\n            variant: \"contained\",\n            color: \"success\",\n            onClick: onSubmitClicked,\n            disabled: !formState.formIsValid,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), showAlert && formState.formIsValid && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sx: {\n          width: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: showAlert.type,\n          color: showAlert.type,\n          children: showAlert.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductAdd, \"Z2Xw4kPojlLvpPwOSQd+wEOeOR8=\");\n\n_c = ProductAdd;\nexport default ProductAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductAdd\");","map":{"version":3,"sources":["/Users/oferraanan/Downloads/shopping/client/src/admin/components/ProductAdd.js"],"names":["React","useState","useEffect","useReducer","useCallback","Box","Grid","Button","Alert","Input","Selector","camelCase","str","charAt","toUpperCase","slice","toLowerCase","FORM_UPDATE","formReducer","state","action","type","formState","id","value","toString","includes","replace","filters","filter","item","filterType","push","filterVariant","console","log","formIsValid","Object","keys","reduce","prev","key","res","ProductAdd","props","onCreateProduct","onEditProduct","editedProduct","alert","dispatchFormState","productName","productDesc","productCost","productInventory","productStatus","productFilters","showAlert","setShowAlert","onInputUpdate","onInputChange","event","target","onSubmitClicked","product","flexGrow","padding","width","filterTypes","map","index","variants","filterList","variant","color","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, useCallback } from 'react';\n\n// MUI\nimport { Box, Grid, Button, Alert } from '@mui/material';\n\n// COMPONENTS\nimport Input from './Input';\nimport Selector from './Selector';\n\n// CammelCase Helper\nconst camelCase = (str) => {\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n};\n\n//REDUCER\nconst FORM_UPDATE = 'FORM_UPDATE';\nconst formReducer = (state, action) => {\n  if (action.type === FORM_UPDATE) {\n    let formState = state;\n\n    let id = action.id;\n    let value = action.value;\n\n    if (id.toString().includes('filter')) {\n      // the filter Type\n      let type = id.toString().replace('filter', '');\n\n      // remove existing filter of the same Type\n      let filters = formState['productFilters'].filter(\n        (item) => item.filterType !== type\n      );\n\n      // add this new filter to the Filters Array\n      filters.push({\n        filterType: type,\n        filterVariant: value,\n      });\n\n      // set to the formState\n      formState['productFilters'] = filters;\n      console.log(filters);\n    } else {\n      formState[id] = value;\n    }\n\n    switch (id) {\n      case 'productCost':\n      case 'productInventory':\n        if (!value || value === '') {\n          formState[id] = id === 'productInventory' ? 1 : 0;\n        }\n        break;\n      default:\n        break;\n    }\n\n    // CHECK IF THE FROM IS VALID\n    let formIsValid = Object.keys(formState).reduce((prev, key) => {\n      let res;\n      if (key === 'productCost' || key === 'productInventory') {\n        res = formState[key] > 0;\n      } else {\n        res = formState[key] !== '';\n      }\n\n      return res && prev;\n    }, true);\n\n    return {\n      ...formState,\n      formIsValid: formIsValid,\n    };\n  }\n\n  return state;\n};\n\n// COMPONENT\nconst ProductAdd = (props) => {\n  const { filters, onCreateProduct, onEditProduct, editedProduct, alert } =\n    props;\n\n  //REDUCER ACTION / UPDATE\n  const [formState, dispatchFormState] = useReducer(formReducer, {\n    productName: editedProduct.productName || '',\n    productDesc: '',\n    productCost: 0,\n    productInventory: 1,\n    productStatus: 'active',\n    productFilters: [],\n    formIsValid: false,\n  });\n\n  // ALERT HANDLER\n  const [showAlert, setShowAlert] = useState(null);\n  useEffect(() => {\n    setShowAlert(alert);\n  }, [alert]);\n\n  //UPADTE INPUTS\n  const onInputUpdate = useCallback(\n    (id, value) => {\n      dispatchFormState({\n        type: FORM_UPDATE,\n        id,\n        value,\n      });\n      setShowAlert(null);\n    },\n    [dispatchFormState, setShowAlert]\n  );\n\n  //INPUTS CALLBACK\n  const onInputChange = (event) => {\n    let id = event.target.id;\n    let value = event.target.value;\n\n    id && onInputUpdate(id, value);\n  };\n\n  // SUBMIT HANDLER\n  const onSubmitClicked = () => {\n    // if -> just in case...\n    // it is validated in the renderer scope\n    if (formState.formIsValid && onCreateProduct) {\n      let product = formState;\n      delete product.formIsValid;\n\n      // parent callback\n      onCreateProduct && onCreateProduct(product);\n      onEditProduct && onEditProduct(product);\n    }\n  };\n\n  return (\n    <Box\n      sx={{ flexGrow: 1, padding: '50px 0' }}\n      display={'flex'}\n      justifyContent={'center'}\n    >\n      <Grid\n        container\n        sx={{ width: 1 / 2 }}\n        flexDirection={'column'}\n        justifyContent={'flex-start'}\n        alignItems={'center'}\n      >\n        <Grid item sx={{ width: 1 }}>\n          Create new Product\n        </Grid>\n        <Grid\n          item\n          display={'flex'}\n          flexDirection={'column'}\n          justifyContent={'space-between'}\n          alignItems={'center'}\n          sx={{ width: 1 }}\n        >\n          <Grid item sx={{ width: 1 }} padding={2}>\n            <Input\n              inputType={'text'}\n              id={'productName'}\n              label=\"Product Name\"\n              onChange={onInputChange}\n              required\n              camelCased\n            />\n          </Grid>\n          <Grid item sx={{ width: 1 }} padding={2}>\n            <Input\n              inputType={'text'}\n              id={'productDesc'}\n              label=\"Product Description\"\n              onChange={onInputChange}\n              required\n              camelCased\n            />\n          </Grid>\n          <Grid item sx={{ width: 1 }}>\n            Product Filters\n          </Grid>\n          {filters.filterTypes.map((type, index) => {\n            const variants = filters.filterList\n              .filter((item) => item.type === type)\n              .map((item) => item.variant);\n\n            return (\n              <Grid key={index} item sx={{ width: 1 }} padding={2}>\n                <Selector\n                  id={`filter${camelCase(type)}`}\n                  selectors={variants}\n                  label={`${camelCase(type)}`}\n                  onSelect={onInputChange}\n                  required\n                />\n              </Grid>\n            );\n          })}\n          <Grid item sx={{ width: 1, color: 'primary' }}>\n            Product Inventory\n          </Grid>\n          <Grid item sx={{ width: 1 }} padding={2}>\n            <Input\n              inputType={'currency'}\n              id={'productCost'}\n              label=\"Product Cost\"\n              onChange={onInputChange}\n              required\n            />\n          </Grid>\n          <Grid item sx={{ width: 1 }} padding={2}>\n            <Input\n              inputType={'number'}\n              id={'productInventory'}\n              label=\"Product Inventory\"\n              defaultValue={'1'}\n              onChange={onInputChange}\n              required\n            />\n          </Grid>\n          <Grid item sx={{ width: 1 }} padding={2}>\n            <Selector\n              id={'productStatus'}\n              selectors={['Inactive', 'Active']}\n              defaultIndex={1}\n              label={'Product Status'}\n              onSelect={onInputChange}\n              required\n            />\n          </Grid>\n          <Grid item sx={{ width: 1 }} padding={2}>\n            <Button\n              sx={{ width: 1 }}\n              variant=\"contained\"\n              color=\"success\"\n              onClick={onSubmitClicked}\n              disabled={!formState.formIsValid}\n            >\n              Submit\n            </Button>\n          </Grid>\n        </Grid>\n        {showAlert && formState.formIsValid && (\n          <Grid item sx={{ width: 1 }}>\n            <Alert severity={showAlert.type} color={showAlert.type}>\n              {showAlert.message}\n            </Alert>\n          </Grid>\n        )}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default ProductAdd;\n"]},"metadata":{},"sourceType":"module"}