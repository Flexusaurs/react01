{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'; // URLs\n\nconst BASE_URL = 'http://127.0.0.1:5001/';\nconst ADMIN_URL = BASE_URL + 'admin/';\nexport const getFilters = createAsyncThunk('admin/loadFilters', async thunkAPI => {\n  const filtersURL = ADMIN_URL + 'filters';\n\n  try {\n    return await fetch(filtersURL).then(res => res.json());\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\nexport const createFilter = createAsyncThunk('admin/createFilter', async (filter, thunkAPI) => {\n  const filtersURL = ADMIN_URL + 'filters';\n\n  try {\n    const response = await fetch(filtersURL, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(filter)\n    }).then(res => res.json());\n\n    if (response.error) {\n      return thunkAPI.rejectWithValue(response.message\n      /*'Duplicate variant'*/\n      );\n    } else {\n      return response;\n    }\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\nexport const filtersSlice = createSlice({\n  name: 'filters',\n  initialState: {\n    filterTypes: [],\n    filterList: [],\n    loading: 'idle',\n    alert: null\n  },\n  extraReducers: {\n    // loadFilters\n    [getFilters.pending]: (state, action) => ({ ...state,\n      loading: 'loading',\n      alert: null\n    }),\n    [getFilters.fulfilled]: (state, action) => ({\n      loading: 'success',\n      filterTypes: [...new Set(action.payload.filters.map(item => item.type))].sort((a, b) => a > b ? 1 : -1),\n      filterList: [...action.payload.filters],\n      alert: null\n    }),\n    [getFilters.rejected]: (state, action) => ({ ...state,\n      loading: 'failed',\n      alert: {\n        type: 'error',\n        message: action.payload.data.error\n      }\n    }),\n    // createFilter\n    [createFilter.pending]: (state, action) => ({ ...state,\n      loading: 'loading',\n      alert: null\n    }),\n    [createFilter.fulfilled]: (state, action) => ({\n      loading: 'success',\n      filterTypes: [...new Set([...state.filterTypes, action.payload.filter.type])].sort((a, b) => a > b ? 1 : -1),\n      filterList: [...state.filterList, action.payload.filter],\n      alert: {\n        type: 'success',\n        message: `New filter added: ${JSON.stringify({\n          type: action.payload.filter.type,\n          variant: action.payload.filter.variant\n        })}`\n      }\n    }),\n    [createFilter.rejected]: (state, action) => ({ ...state,\n      loading: 'failed',\n      alert: {\n        type: 'error',\n        message: action.payload\n      }\n    })\n  }\n});\nexport default filtersSlice.reducer;","map":{"version":3,"sources":["/Users/oferraanan/Downloads/shopping/client/src/redux/adminStore/slices/filtersSlice.js"],"names":["createSlice","createAsyncThunk","BASE_URL","ADMIN_URL","getFilters","thunkAPI","filtersURL","fetch","then","res","json","error","rejectWithValue","response","data","createFilter","filter","method","headers","Accept","body","JSON","stringify","message","filtersSlice","name","initialState","filterTypes","filterList","loading","alert","extraReducers","pending","state","action","fulfilled","Set","payload","filters","map","item","type","sort","a","b","rejected","variant","reducer"],"mappings":"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","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// URLs\nconst BASE_URL = 'http://127.0.0.1:5001/';\nconst ADMIN_URL = BASE_URL + 'admin/';\n\nexport const getFilters = createAsyncThunk(\n  'admin/loadFilters',\n  async (thunkAPI) => {\n    const filtersURL = ADMIN_URL + 'filters';\n    try {\n      return await fetch(filtersURL).then((res) => res.json());\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const createFilter = createAsyncThunk(\n  'admin/createFilter',\n  async (filter, thunkAPI) => {\n    const filtersURL = ADMIN_URL + 'filters';\n    try {\n      const response = await fetch(filtersURL, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(filter),\n      }).then((res) => res.json());\n\n      if (response.error) {\n        return thunkAPI.rejectWithValue(\n          response.message /*'Duplicate variant'*/\n        );\n      } else {\n        return response;\n      }\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const filtersSlice = createSlice({\n  name: 'filters',\n  initialState: {\n    filterTypes: [],\n    filterList: [],\n    loading: 'idle',\n    alert: null,\n  },\n  extraReducers: {\n    // loadFilters\n    [getFilters.pending]: (state, action) => ({\n      ...state,\n      loading: 'loading',\n      alert: null,\n    }),\n    [getFilters.fulfilled]: (state, action) => ({\n      loading: 'success',\n      filterTypes: [\n        ...new Set(action.payload.filters.map((item) => item.type)),\n      ].sort((a, b) => (a > b ? 1 : -1)),\n      filterList: [...action.payload.filters],\n      alert: null,\n    }),\n    [getFilters.rejected]: (state, action) => ({\n      ...state,\n      loading: 'failed',\n      alert: { type: 'error', message: action.payload.data.error },\n    }),\n    // createFilter\n    [createFilter.pending]: (state, action) => ({\n      ...state,\n      loading: 'loading',\n      alert: null,\n    }),\n    [createFilter.fulfilled]: (state, action) => ({\n      loading: 'success',\n      filterTypes: [\n        ...new Set([...state.filterTypes, action.payload.filter.type]),\n      ].sort((a, b) => (a > b ? 1 : -1)),\n      filterList: [...state.filterList, action.payload.filter],\n      alert: {\n        type: 'success',\n        message: `New filter added: ${JSON.stringify({\n          type: action.payload.filter.type,\n          variant: action.payload.filter.variant,\n        })}`,\n      },\n    }),\n    [createFilter.rejected]: (state, action) => ({\n      ...state,\n      loading: 'failed',\n      alert: { type: 'error', message: action.payload },\n    }),\n  },\n});\n\nexport default filtersSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}