{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'; // URLs\n\nconst BASE_URL = 'http://127.0.0.1:5011/';\nconst ADMIN_URL = BASE_URL + 'admin/';\nexport const getProducts = createAsyncThunk('admin/loadProducts', async thunkAPI => {\n  const productsURL = ADMIN_URL + 'products';\n\n  try {\n    return await fetch(productsURL).then(res => res.json());\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\nexport const createProduct = createAsyncThunk('admin/createProduct', async (product, thunkAPI) => {\n  const productsURL = ADMIN_URL + 'products';\n\n  try {\n    const response = await fetch(productsURL, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(product)\n    }).then(res => res.json());\n\n    if (response.error) {\n      return thunkAPI.rejectWithValue(response.message);\n    } else {\n      return response;\n    }\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\nexport const patchProduct = createAsyncThunk('admin/patchProduct', async (product, thunkAPI) => {\n  const productsURL = ADMIN_URL + 'products/' + product._id;\n\n  try {\n    const response = await fetch(productsURL, {\n      method: 'PATCH',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(product)\n    }).then(res => res.json());\n\n    if (response.error) {\n      return thunkAPI.rejectWithValue(response.message);\n    } else {\n      return response;\n    }\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\nexport const deleteProduct = createAsyncThunk('admin/deleteProduct', async (id, thunkAPI) => {\n  const productsURL = ADMIN_URL + 'products/' + id;\n\n  try {\n    const response = await fetch(productsURL, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json());\n\n    if (response.error) {\n      return thunkAPI.rejectWithValue(response.message);\n    } else {\n      return response;\n    }\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\nexport const productsSlice = createSlice({\n  name: 'products',\n  initialState: {\n    productsList: [],\n    loading: 'idle',\n    alert: null\n  },\n  extraReducers: {\n    // loadProducts\n    [getProducts.pending]: (state, action) => ({ ...state,\n      loading: 'loading',\n      alert: null\n    }),\n    [getProducts.fulfilled]: (state, action) => ({\n      loading: 'success',\n      productsList: [...action.payload.products],\n      alert: null\n    }),\n    [getProducts.rejected]: (state, action) => ({ ...state,\n      loading: 'failed',\n      alert: {\n        type: 'error',\n        message: action.payload.data.error\n      }\n    }),\n    // createProduct\n    [createProduct.pending]: (state, action) => ({ ...state,\n      loading: 'loading',\n      alert: null\n    }),\n    [createProduct.fulfilled]: (state, action) => ({\n      loading: 'success',\n      productsList: [...state.productsList, action.payload.product],\n      alert: {\n        type: 'success',\n        message: `New Product added: ${action.payload.product._id}`\n      }\n    }),\n    [createProduct.rejected]: (state, action) => ({ ...state,\n      loading: 'failed',\n      alert: {\n        type: 'error',\n        message: action.payload\n      }\n    }),\n    ////\n    // patchProduct\n    [patchProduct.pending]: (state, action) => ({ ...state,\n      loading: 'loading',\n      alert: null\n    }),\n    [patchProduct.fulfilled]: (state, action) => ({\n      loading: 'success',\n      productsList: [...state.productsList.map(product => {\n        return product.id === action.payload.product._id ? action.payload.product : product;\n      })],\n      alert: {\n        type: 'success',\n        message: `Product updated: ${action.payload.product._id}`\n      }\n    }),\n    [patchProduct.rejected]: (state, action) => ({ ...state,\n      loading: 'failed',\n      alert: {\n        type: 'error',\n        message: action.payload\n      }\n    }),\n    ///\n    // deleteProduct\n    [deleteProduct.pending]: (state, action) => ({ ...state,\n      loading: 'loading',\n      alert: null\n    }),\n    [deleteProduct.fulfilled]: (state, action) => ({\n      loading: 'success',\n      productsList: [...state.productsList.filter(product => {\n        return product.id !== action.payload.deleted_product.id;\n      })],\n      alert: {\n        type: 'success',\n        message: `Product deleted: ${action.payload.deleted_product.id}`\n      }\n    }),\n    [deleteProduct.rejected]: (state, action) => ({ ...state,\n      loading: 'failed',\n      alert: {\n        type: 'error',\n        message: action.payload\n      }\n    })\n  }\n});\nexport default productsSlice.reducer;","map":{"version":3,"sources":["C:/Users/Itay/Desktop/proj/shopping/client/src/redux/adminStore/slices/productsSlice.js"],"names":["createSlice","createAsyncThunk","BASE_URL","ADMIN_URL","getProducts","thunkAPI","productsURL","fetch","then","res","json","error","rejectWithValue","response","data","createProduct","product","method","headers","Accept","body","JSON","stringify","message","patchProduct","_id","deleteProduct","id","productsSlice","name","initialState","productsList","loading","alert","extraReducers","pending","state","action","fulfilled","payload","products","rejected","type","map","filter","deleted_product","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,wBAAjB;AACA,MAAMC,SAAS,GAAGD,QAAQ,GAAG,QAA7B;AAEA,OAAO,MAAME,WAAW,GAAGH,gBAAgB,CACzC,oBADyC,EAEzC,MAAOI,QAAP,IAAoB;AAClB,QAAMC,WAAW,GAAGH,SAAS,GAAG,UAAhC;;AACA,MAAI;AACF,WAAO,MAAMI,KAAK,CAACD,WAAD,CAAL,CAAmBE,IAAnB,CAAyBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAjC,CAAb;AACD,GAFD,CAEE,OAAOC,KAAP,EAAc;AACd,WAAON,QAAQ,CAACO,eAAT,CAAyBD,KAAK,CAACE,QAAN,CAAeC,IAAxC,CAAP;AACD;AACF,CATwC,CAApC;AAYP,OAAO,MAAMC,aAAa,GAAGd,gBAAgB,CAC3C,qBAD2C,EAE3C,OAAOe,OAAP,EAAgBX,QAAhB,KAA6B;AAC3B,QAAMC,WAAW,GAAGH,SAAS,GAAG,UAAhC;;AACA,MAAI;AACF,UAAMU,QAAQ,GAAG,MAAMN,KAAK,CAACD,WAAD,EAAc;AACxCW,MAAAA,MAAM,EAAE,MADgC;AAExCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAF+B;AAMxCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf;AANkC,KAAd,CAAL,CAOpBR,IAPoB,CAOdC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPM,CAAvB;;AASA,QAAIG,QAAQ,CAACF,KAAb,EAAoB;AAClB,aAAON,QAAQ,CAACO,eAAT,CAAyBC,QAAQ,CAACU,OAAlC,CAAP;AACD,KAFD,MAEO;AACL,aAAOV,QAAP;AACD;AACF,GAfD,CAeE,OAAOF,KAAP,EAAc;AACd,WAAON,QAAQ,CAACO,eAAT,CAAyBD,KAAK,CAACE,QAAN,CAAeC,IAAxC,CAAP;AACD;AACF,CAtB0C,CAAtC;AAyBP,OAAO,MAAMU,YAAY,GAAGvB,gBAAgB,CAC1C,oBAD0C,EAE1C,OAAOe,OAAP,EAAgBX,QAAhB,KAA6B;AAC3B,QAAMC,WAAW,GAAGH,SAAS,GAAG,WAAZ,GAA0Ba,OAAO,CAACS,GAAtD;;AACA,MAAI;AACF,UAAMZ,QAAQ,GAAG,MAAMN,KAAK,CAACD,WAAD,EAAc;AACxCW,MAAAA,MAAM,EAAE,OADgC;AAExCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAF+B;AAMxCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf;AANkC,KAAd,CAAL,CAOpBR,IAPoB,CAOdC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPM,CAAvB;;AASA,QAAIG,QAAQ,CAACF,KAAb,EAAoB;AAClB,aAAON,QAAQ,CAACO,eAAT,CAAyBC,QAAQ,CAACU,OAAlC,CAAP;AACD,KAFD,MAEO;AACL,aAAOV,QAAP;AACD;AACF,GAfD,CAeE,OAAOF,KAAP,EAAc;AACd,WAAON,QAAQ,CAACO,eAAT,CAAyBD,KAAK,CAACE,QAAN,CAAeC,IAAxC,CAAP;AACD;AACF,CAtByC,CAArC;AAyBP,OAAO,MAAMY,aAAa,GAAGzB,gBAAgB,CAC3C,qBAD2C,EAE3C,OAAO0B,EAAP,EAAWtB,QAAX,KAAwB;AACtB,QAAMC,WAAW,GAAGH,SAAS,GAAG,WAAZ,GAA0BwB,EAA9C;;AACA,MAAI;AACF,UAAMd,QAAQ,GAAG,MAAMN,KAAK,CAACD,WAAD,EAAc;AACxCW,MAAAA,MAAM,EAAE,QADgC;AAExCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT;AAF+B,KAAd,CAAL,CAMpBX,IANoB,CAMdC,GAAD,IAASA,GAAG,CAACC,IAAJ,EANM,CAAvB;;AAQA,QAAIG,QAAQ,CAACF,KAAb,EAAoB;AAClB,aAAON,QAAQ,CAACO,eAAT,CAAyBC,QAAQ,CAACU,OAAlC,CAAP;AACD,KAFD,MAEO;AACL,aAAOV,QAAP;AACD;AACF,GAdD,CAcE,OAAOF,KAAP,EAAc;AACd,WAAON,QAAQ,CAACO,eAAT,CAAyBD,KAAK,CAACE,QAAN,CAAeC,IAAxC,CAAP;AACD;AACF,CArB0C,CAAtC;AAwBP,OAAO,MAAMc,aAAa,GAAG5B,WAAW,CAAC;AACvC6B,EAAAA,IAAI,EAAE,UADiC;AAEvCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,YAAY,EAAE,EADF;AAEZC,IAAAA,OAAO,EAAE,MAFG;AAGZC,IAAAA,KAAK,EAAE;AAHK,GAFyB;AAOvCC,EAAAA,aAAa,EAAE;AACb;AACA,KAAC9B,WAAW,CAAC+B,OAAb,GAAuB,CAACC,KAAD,EAAQC,MAAR,MAAoB,EACzC,GAAGD,KADsC;AAEzCJ,MAAAA,OAAO,EAAE,SAFgC;AAGzCC,MAAAA,KAAK,EAAE;AAHkC,KAApB,CAFV;AAOb,KAAC7B,WAAW,CAACkC,SAAb,GAAyB,CAACF,KAAD,EAAQC,MAAR,MAAoB;AAC3CL,MAAAA,OAAO,EAAE,SADkC;AAE3CD,MAAAA,YAAY,EAAE,CAAC,GAAGM,MAAM,CAACE,OAAP,CAAeC,QAAnB,CAF6B;AAG3CP,MAAAA,KAAK,EAAE;AAHoC,KAApB,CAPZ;AAYb,KAAC7B,WAAW,CAACqC,QAAb,GAAwB,CAACL,KAAD,EAAQC,MAAR,MAAoB,EAC1C,GAAGD,KADuC;AAE1CJ,MAAAA,OAAO,EAAE,QAFiC;AAG1CC,MAAAA,KAAK,EAAE;AAAES,QAAAA,IAAI,EAAE,OAAR;AAAiBnB,QAAAA,OAAO,EAAEc,MAAM,CAACE,OAAP,CAAezB,IAAf,CAAoBH;AAA9C;AAHmC,KAApB,CAZX;AAiBb;AACA,KAACI,aAAa,CAACoB,OAAf,GAAyB,CAACC,KAAD,EAAQC,MAAR,MAAoB,EAC3C,GAAGD,KADwC;AAE3CJ,MAAAA,OAAO,EAAE,SAFkC;AAG3CC,MAAAA,KAAK,EAAE;AAHoC,KAApB,CAlBZ;AAuBb,KAAClB,aAAa,CAACuB,SAAf,GAA2B,CAACF,KAAD,EAAQC,MAAR,MAAoB;AAC7CL,MAAAA,OAAO,EAAE,SADoC;AAE7CD,MAAAA,YAAY,EAAE,CAAC,GAAGK,KAAK,CAACL,YAAV,EAAwBM,MAAM,CAACE,OAAP,CAAevB,OAAvC,CAF+B;AAG7CiB,MAAAA,KAAK,EAAE;AACLS,QAAAA,IAAI,EAAE,SADD;AAELnB,QAAAA,OAAO,EAAG,sBAAqBc,MAAM,CAACE,OAAP,CAAevB,OAAf,CAAuBS,GAAI;AAFrD;AAHsC,KAApB,CAvBd;AA+Bb,KAACV,aAAa,CAAC0B,QAAf,GAA0B,CAACL,KAAD,EAAQC,MAAR,MAAoB,EAC5C,GAAGD,KADyC;AAE5CJ,MAAAA,OAAO,EAAE,QAFmC;AAG5CC,MAAAA,KAAK,EAAE;AAAES,QAAAA,IAAI,EAAE,OAAR;AAAiBnB,QAAAA,OAAO,EAAEc,MAAM,CAACE;AAAjC;AAHqC,KAApB,CA/Bb;AAoCb;AACA;AACA,KAACf,YAAY,CAACW,OAAd,GAAwB,CAACC,KAAD,EAAQC,MAAR,MAAoB,EAC1C,GAAGD,KADuC;AAE1CJ,MAAAA,OAAO,EAAE,SAFiC;AAG1CC,MAAAA,KAAK,EAAE;AAHmC,KAApB,CAtCX;AA2Cb,KAACT,YAAY,CAACc,SAAd,GAA0B,CAACF,KAAD,EAAQC,MAAR,MAAoB;AAC5CL,MAAAA,OAAO,EAAE,SADmC;AAE5CD,MAAAA,YAAY,EAAE,CACZ,GAAGK,KAAK,CAACL,YAAN,CAAmBY,GAAnB,CAAwB3B,OAAD,IAAa;AACrC,eAAOA,OAAO,CAACW,EAAR,KAAeU,MAAM,CAACE,OAAP,CAAevB,OAAf,CAAuBS,GAAtC,GACHY,MAAM,CAACE,OAAP,CAAevB,OADZ,GAEHA,OAFJ;AAGD,OAJE,CADS,CAF8B;AAS5CiB,MAAAA,KAAK,EAAE;AACLS,QAAAA,IAAI,EAAE,SADD;AAELnB,QAAAA,OAAO,EAAG,oBAAmBc,MAAM,CAACE,OAAP,CAAevB,OAAf,CAAuBS,GAAI;AAFnD;AATqC,KAApB,CA3Cb;AAyDb,KAACD,YAAY,CAACiB,QAAd,GAAyB,CAACL,KAAD,EAAQC,MAAR,MAAoB,EAC3C,GAAGD,KADwC;AAE3CJ,MAAAA,OAAO,EAAE,QAFkC;AAG3CC,MAAAA,KAAK,EAAE;AAAES,QAAAA,IAAI,EAAE,OAAR;AAAiBnB,QAAAA,OAAO,EAAEc,MAAM,CAACE;AAAjC;AAHoC,KAApB,CAzDZ;AA+Db;AACA;AACA,KAACb,aAAa,CAACS,OAAf,GAAyB,CAACC,KAAD,EAAQC,MAAR,MAAoB,EAC3C,GAAGD,KADwC;AAE3CJ,MAAAA,OAAO,EAAE,SAFkC;AAG3CC,MAAAA,KAAK,EAAE;AAHoC,KAApB,CAjEZ;AAsEb,KAACP,aAAa,CAACY,SAAf,GAA2B,CAACF,KAAD,EAAQC,MAAR,MAAoB;AAC7CL,MAAAA,OAAO,EAAE,SADoC;AAE7CD,MAAAA,YAAY,EAAE,CACZ,GAAGK,KAAK,CAACL,YAAN,CAAmBa,MAAnB,CAA2B5B,OAAD,IAAa;AACxC,eAAOA,OAAO,CAACW,EAAR,KAAeU,MAAM,CAACE,OAAP,CAAeM,eAAf,CAA+BlB,EAArD;AACD,OAFE,CADS,CAF+B;AAO7CM,MAAAA,KAAK,EAAE;AACLS,QAAAA,IAAI,EAAE,SADD;AAELnB,QAAAA,OAAO,EAAG,oBAAmBc,MAAM,CAACE,OAAP,CAAeM,eAAf,CAA+BlB,EAAG;AAF1D;AAPsC,KAApB,CAtEd;AAkFb,KAACD,aAAa,CAACe,QAAf,GAA0B,CAACL,KAAD,EAAQC,MAAR,MAAoB,EAC5C,GAAGD,KADyC;AAE5CJ,MAAAA,OAAO,EAAE,QAFmC;AAG5CC,MAAAA,KAAK,EAAE;AAAES,QAAAA,IAAI,EAAE,OAAR;AAAiBnB,QAAAA,OAAO,EAAEc,MAAM,CAACE;AAAjC;AAHqC,KAApB;AAlFb;AAPwB,CAAD,CAAjC;AAiGP,eAAeX,aAAa,CAACkB,OAA7B","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\n// URLs\r\nconst BASE_URL = 'http://127.0.0.1:5011/';\r\nconst ADMIN_URL = BASE_URL + 'admin/';\r\n\r\nexport const getProducts = createAsyncThunk(\r\n  'admin/loadProducts',\r\n  async (thunkAPI) => {\r\n    const productsURL = ADMIN_URL + 'products';\r\n    try {\r\n      return await fetch(productsURL).then((res) => res.json());\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const createProduct = createAsyncThunk(\r\n  'admin/createProduct',\r\n  async (product, thunkAPI) => {\r\n    const productsURL = ADMIN_URL + 'products';\r\n    try {\r\n      const response = await fetch(productsURL, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(product),\r\n      }).then((res) => res.json());\r\n\r\n      if (response.error) {\r\n        return thunkAPI.rejectWithValue(response.message);\r\n      } else {\r\n        return response;\r\n      }\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const patchProduct = createAsyncThunk(\r\n  'admin/patchProduct',\r\n  async (product, thunkAPI) => {\r\n    const productsURL = ADMIN_URL + 'products/' + product._id;\r\n    try {\r\n      const response = await fetch(productsURL, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(product),\r\n      }).then((res) => res.json());\r\n\r\n      if (response.error) {\r\n        return thunkAPI.rejectWithValue(response.message);\r\n      } else {\r\n        return response;\r\n      }\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteProduct = createAsyncThunk(\r\n  'admin/deleteProduct',\r\n  async (id, thunkAPI) => {\r\n    const productsURL = ADMIN_URL + 'products/' + id;\r\n    try {\r\n      const response = await fetch(productsURL, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }).then((res) => res.json());\r\n\r\n      if (response.error) {\r\n        return thunkAPI.rejectWithValue(response.message);\r\n      } else {\r\n        return response;\r\n      }\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nexport const productsSlice = createSlice({\r\n  name: 'products',\r\n  initialState: {\r\n    productsList: [],\r\n    loading: 'idle',\r\n    alert: null,\r\n  },\r\n  extraReducers: {\r\n    // loadProducts\r\n    [getProducts.pending]: (state, action) => ({\r\n      ...state,\r\n      loading: 'loading',\r\n      alert: null,\r\n    }),\r\n    [getProducts.fulfilled]: (state, action) => ({\r\n      loading: 'success',\r\n      productsList: [...action.payload.products],\r\n      alert: null,\r\n    }),\r\n    [getProducts.rejected]: (state, action) => ({\r\n      ...state,\r\n      loading: 'failed',\r\n      alert: { type: 'error', message: action.payload.data.error },\r\n    }),\r\n    // createProduct\r\n    [createProduct.pending]: (state, action) => ({\r\n      ...state,\r\n      loading: 'loading',\r\n      alert: null,\r\n    }),\r\n    [createProduct.fulfilled]: (state, action) => ({\r\n      loading: 'success',\r\n      productsList: [...state.productsList, action.payload.product],\r\n      alert: {\r\n        type: 'success',\r\n        message: `New Product added: ${action.payload.product._id}`,\r\n      },\r\n    }),\r\n    [createProduct.rejected]: (state, action) => ({\r\n      ...state,\r\n      loading: 'failed',\r\n      alert: { type: 'error', message: action.payload },\r\n    }),\r\n    ////\r\n    // patchProduct\r\n    [patchProduct.pending]: (state, action) => ({\r\n      ...state,\r\n      loading: 'loading',\r\n      alert: null,\r\n    }),\r\n    [patchProduct.fulfilled]: (state, action) => ({\r\n      loading: 'success',\r\n      productsList: [\r\n        ...state.productsList.map((product) => {\r\n          return product.id === action.payload.product._id\r\n            ? action.payload.product\r\n            : product;\r\n        }),\r\n      ],\r\n      alert: {\r\n        type: 'success',\r\n        message: `Product updated: ${action.payload.product._id}`,\r\n      },\r\n    }),\r\n    [patchProduct.rejected]: (state, action) => ({\r\n      ...state,\r\n      loading: 'failed',\r\n      alert: { type: 'error', message: action.payload },\r\n    }),\r\n\r\n    ///\r\n    // deleteProduct\r\n    [deleteProduct.pending]: (state, action) => ({\r\n      ...state,\r\n      loading: 'loading',\r\n      alert: null,\r\n    }),\r\n    [deleteProduct.fulfilled]: (state, action) => ({\r\n      loading: 'success',\r\n      productsList: [\r\n        ...state.productsList.filter((product) => {\r\n          return product.id !== action.payload.deleted_product.id;\r\n        }),\r\n      ],\r\n      alert: {\r\n        type: 'success',\r\n        message: `Product deleted: ${action.payload.deleted_product.id}`,\r\n      },\r\n    }),\r\n    [deleteProduct.rejected]: (state, action) => ({\r\n      ...state,\r\n      loading: 'failed',\r\n      alert: { type: 'error', message: action.payload },\r\n    }),\r\n  },\r\n});\r\n\r\nexport default productsSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}